{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Diaconou\\\\Code\\\\my-tutor-app-ts\\\\frontend\\\\src\\\\components\\\\MyChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport List from '@mui/material/List';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItem from '@mui/material/ListItem';\nimport { Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({});\nconst MyChatWindow = _ref => {\n  _s();\n  let {\n    messages\n  } = _ref;\n  const bottomRef = useRef(null);\n  useEffect(() => {\n    if (bottomRef.current) {\n      bottomRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const listItemStyle = {\n    paddingTop: '10px',\n    paddingBottom: '10px'\n  };\n  const textColor = '#ffffff';\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        id: \"chatBox\",\n        sx: {\n          width: '100%',\n          paddingTop: '4px'\n        },\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          style: listItemStyle,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              style: {\n                fontFamily: 'Noto Sans, monospace',\n                fontSize: '13px',\n                color: textColor\n              },\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this),\n            sx: {\n              textAlign: 'left'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChatWindow, \"eaUWg0io6wE0buoFSqU1QLjVsUo=\");\n_c = MyChatWindow;\nexport default MyChatWindow;\nvar _c;\n$RefreshReg$(_c, \"MyChatWindow\");","map":{"version":3,"names":["React","useRef","useEffect","List","createTheme","ThemeProvider","ListItemText","ListItem","Typography","Box","jsxDEV","_jsxDEV","theme","MyChatWindow","_ref","_s","messages","bottomRef","current","scrollIntoView","behavior","listItemStyle","paddingTop","paddingBottom","textColor","children","sx","marginTop","id","width","map","message","index","style","primary","variant","fontFamily","fontSize","color","text","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","ref","_c","$RefreshReg$"],"sources":["C:/Users/Alex Diaconou/Code/my-tutor-app-ts/frontend/src/components/MyChatWindow.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport List from '@mui/material/List';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { Typography } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\ninterface MyChatWindowProps {\r\n  messages: { text: string; isUser: boolean }[];\r\n}\r\n\r\nconst theme = createTheme({});\r\n\r\ndeclare namespace JSX {\r\n  interface IntrinsicElements {\r\n    div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n  }\r\n}\r\n\r\nconst MyChatWindow: React.FC<MyChatWindowProps> = ({ messages }) => {\r\n  const bottomRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (bottomRef.current) {\r\n      bottomRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  const listItemStyle = {\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px',\r\n  };\r\n\r\n  const textColor = '#ffffff';\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box sx={{ marginTop: 'auto' }}>\r\n        <List\r\n          id=\"chatBox\"\r\n          sx={{\r\n            width: '100%',\r\n            paddingTop: '4px',\r\n          }}\r\n        >\r\n          {messages.map((message, index) => (\r\n            <ListItem key={index} style={listItemStyle}>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    style={{\r\n                      fontFamily: 'Noto Sans, monospace',\r\n                      fontSize: '13px',\r\n                      color: textColor,\r\n                    }}\r\n                  >\r\n                    {message.text}\r\n                  </Typography>\r\n                }\r\n                sx={{\r\n                  textAlign: 'left',\r\n                }}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n          <div ref={bottomRef} />\r\n        </List>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default MyChatWindow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQpC,MAAMC,KAAK,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;AAQ7B,MAAMS,YAAyC,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC7D,MAAMG,SAAS,GAAGhB,MAAM,CAAiB,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,CAACC,OAAO,EAAE;MACrBD,SAAS,CAACC,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC1D;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMK,aAAa,GAAG;IACpBC,UAAU,EAAE,MAAM;IAClBC,aAAa,EAAE;EACjB,CAAC;EAED,MAAMC,SAAS,GAAG,SAAS;EAE3B,oBACEb,OAAA,CAACN,aAAa;IAACO,KAAK,EAAEA,KAAM;IAAAa,QAAA,eAC1Bd,OAAA,CAACF,GAAG;MAACiB,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAF,QAAA,eAC7Bd,OAAA,CAACR,IAAI;QACHyB,EAAE,EAAC,SAAS;QACZF,EAAE,EAAE;UACFG,KAAK,EAAE,MAAM;UACbP,UAAU,EAAE;QACd,CAAE;QAAAG,QAAA,GAEDT,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BrB,OAAA,CAACJ,QAAQ;UAAa0B,KAAK,EAAEZ,aAAc;UAAAI,QAAA,eACzCd,OAAA,CAACL,YAAY;YACX4B,OAAO,eACLvB,OAAA,CAACH,UAAU;cACT2B,OAAO,EAAC,OAAO;cACfF,KAAK,EAAE;gBACLG,UAAU,EAAE,sBAAsB;gBAClCC,QAAQ,EAAE,MAAM;gBAChBC,KAAK,EAAEd;cACT,CAAE;cAAAC,QAAA,EAEDM,OAAO,CAACQ;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAEhB;YACDjB,EAAE,EAAE;cACFkB,SAAS,EAAE;YACb;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACF,GAjBWX,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAmBrB,CAAC,eACFhC,OAAA;UAAKkC,GAAG,EAAE5B;QAAU;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AAEpB,CAAC;AAAC5B,EAAA,CApDIF,YAAyC;AAAAiC,EAAA,GAAzCjC,YAAyC;AAsD/C,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}