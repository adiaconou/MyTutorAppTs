{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Alex Diaconou/Code/my-tutor-app-ts/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Alex Diaconou/Code/my-tutor-app-ts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/Users/Alex Diaconou/Code/my-tutor-app-ts/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Alex Diaconou/Code/my-tutor-app-ts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import MyTextField from\"./MyTextField\";import MyChatWindow from\"./MyChatWindow\";import{Box}from\"@mui/material\";import promptGPT from\"../services/openaiService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyChatForm=function MyChatForm(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(window.innerHeight),_useState4=_slicedToArray(_useState3,2),viewportHeight=_useState4[0],setViewportHeight=_useState4[1];var _useState5=useState(window.innerWidth),_useState6=_slicedToArray(_useState5,2),viewportWidth=_useState6[0],setViewportWidth=_useState6[1];var updateViewportSize=function updateViewportSize(){setViewportHeight(window.innerHeight);// setViewportWidth(window.innerWidth);\n};useEffect(function(){window.addEventListener('resize',updateViewportSize);return function(){window.removeEventListener('resize',updateViewportSize);};},[]);var handleTextSubmit=function handleTextSubmit(text){var userMessage={text:text,isUser:true};setMessages(function(prevMessages){return[].concat(_toConsumableArray(prevMessages),[userMessage]);});var fetchResponse=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,aiMessage;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return promptGPT(text);case 2:response=_context.sent;if(response!==null){aiMessage={text:response,isUser:false};setMessages(function(prevMessages){return[].concat(_toConsumableArray(prevMessages),[aiMessage]);});}case 4:case\"end\":return _context.stop();}},_callee);}));return function fetchResponse(){return _ref.apply(this,arguments);};}();fetchResponse();};return/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"\".concat(viewportHeight,\"px\")},children:[/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1,overflowY:\"auto\",backgroundColor:\"transparent\",width:\"100%\",maxWidth:\"md\",marginTop:\"64px\",'&::-webkit-scrollbar':{width:'6px',backgroundColor:'transparent'},'&::-webkit-scrollbar-thumb':{borderRadius:'3px',backgroundColor:'#aaa'},'&::-webkit-scrollbar-track':{borderRadius:'3px',backgroundColor:'transparent'}},children:/*#__PURE__*/_jsx(MyChatWindow,{messages:messages})}),/*#__PURE__*/_jsx(Box,{sx:{position:\"sticky\",bottom:0,zIndex:1,backgroundColor:\"transparent\",paddingBottom:\"15px\",paddingTop:\"15px\",width:\"100%\",maxWidth:\"md\",margin:\"0 auto\"},children:/*#__PURE__*/_jsx(MyTextField,{messages:messages,onSubmit:handleTextSubmit})})]});};export default MyChatForm;","map":{"version":3,"names":["React","useState","useEffect","MyTextField","MyChatWindow","Box","promptGPT","jsx","_jsx","jsxs","_jsxs","MyChatForm","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","window","innerHeight","_useState4","viewportHeight","setViewportHeight","_useState5","innerWidth","_useState6","viewportWidth","setViewportWidth","updateViewportSize","addEventListener","removeEventListener","handleTextSubmit","text","userMessage","isUser","prevMessages","concat","_toConsumableArray","fetchResponse","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","aiMessage","wrap","_callee$","_context","prev","next","sent","stop","apply","arguments","sx","display","flexDirection","alignItems","justifyContent","height","children","flexGrow","overflowY","backgroundColor","width","maxWidth","marginTop","borderRadius","position","bottom","zIndex","paddingBottom","paddingTop","margin","onSubmit"],"sources":["C:/Users/Alex Diaconou/Code/my-tutor-app-ts/frontend/src/components/MyChatForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MyTextField from \"./MyTextField\";\r\nimport MyChatWindow from \"./MyChatWindow\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport promptGPT from \"../services/openaiService\";\r\n\r\ninterface Message {\r\n  text: string;\r\n  isUser: boolean;\r\n}\r\n\r\nconst MyChatForm: React.FC = () => {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [viewportHeight, setViewportHeight] = useState(window.innerHeight);\r\n  const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n\r\n  const updateViewportSize = () => {\r\n    setViewportHeight(window.innerHeight);\r\n    // setViewportWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', updateViewportSize);\r\n    return () => {\r\n      window.removeEventListener('resize', updateViewportSize);\r\n    };\r\n  }, []);\r\n\r\n  const handleTextSubmit = (text: string) => {\r\n    const userMessage: Message = { text, isUser: true };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n    const fetchResponse = async () => {\r\n      const response = await promptGPT(text);\r\n      if (response !== null) {\r\n        const aiMessage: Message = { text: response, isUser: false };\r\n        setMessages((prevMessages) => [...prevMessages, aiMessage]);\r\n      }\r\n    };\r\n\r\n    fetchResponse();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: `${viewportHeight}px`,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          overflowY: \"auto\",\r\n          backgroundColor: \"transparent\",\r\n          width: \"100%\",\r\n          maxWidth: \"md\",\r\n          marginTop: \"64px\",\r\n          \r\n          '&::-webkit-scrollbar': {\r\n            width: '6px',\r\n            backgroundColor: 'transparent',\r\n          },\r\n          '&::-webkit-scrollbar-thumb': {\r\n            borderRadius: '3px',\r\n            backgroundColor: '#aaa',\r\n          },\r\n          '&::-webkit-scrollbar-track': {\r\n            borderRadius: '3px',\r\n            backgroundColor: 'transparent',\r\n          }, \r\n        }}\r\n      >\r\n        <MyChatWindow messages={messages} />\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          position: \"sticky\",\r\n          bottom: 0,\r\n          zIndex: 1,\r\n          backgroundColor: \"transparent\",\r\n          paddingBottom: \"15px\",\r\n          paddingTop: \"15px\",\r\n          width: \"100%\",\r\n          maxWidth: \"md\",\r\n          margin: \"0 auto\",\r\n        }}\r\n      >\r\n        <MyTextField messages={messages} onSubmit={handleTextSubmit} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChatForm;\r\n"],"mappings":"4hBAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,OAASC,GAAG,KAAc,eAAe,CACzC,MAAO,CAAAC,SAAS,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAOlD,GAAM,CAAAC,UAAoB,CAAG,QAAvB,CAAAA,UAAoBA,CAAA,CAAS,CACjC,IAAAC,SAAA,CAAgCX,QAAQ,CAAY,EAAE,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAhDG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAA4ChB,QAAQ,CAACiB,MAAM,CAACC,WAAW,CAAC,CAAAC,UAAA,CAAAN,cAAA,CAAAG,UAAA,IAAjEI,cAAc,CAAAD,UAAA,IAAEE,iBAAiB,CAAAF,UAAA,IACxC,IAAAG,UAAA,CAA0CtB,QAAQ,CAACiB,MAAM,CAACM,UAAU,CAAC,CAAAC,UAAA,CAAAX,cAAA,CAAAS,UAAA,IAA9DG,aAAa,CAAAD,UAAA,IAAEE,gBAAgB,CAAAF,UAAA,IAEtC,GAAM,CAAAG,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC/BN,iBAAiB,CAACJ,MAAM,CAACC,WAAW,CAAC,CACrC;AACF,CAAC,CAEDjB,SAAS,CAAC,UAAM,CACdgB,MAAM,CAACW,gBAAgB,CAAC,QAAQ,CAAED,kBAAkB,CAAC,CACrD,MAAO,WAAM,CACXV,MAAM,CAACY,mBAAmB,CAAC,QAAQ,CAAEF,kBAAkB,CAAC,CAC1D,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAG,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,IAAY,CAAK,CACzC,GAAM,CAAAC,WAAoB,CAAG,CAAED,IAAI,CAAJA,IAAI,CAAEE,MAAM,CAAE,IAAK,CAAC,CACnDlB,WAAW,CAAC,SAACmB,YAAY,WAAAC,MAAA,CAAAC,kBAAA,CAASF,YAAY,GAAEF,WAAW,IAAC,CAAC,CAE7D,GAAM,CAAAK,aAAa,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,QAAA,CAAAC,SAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACG,CAAA5C,SAAS,CAAC0B,IAAI,CAAC,QAAhCY,QAAQ,CAAAI,QAAA,CAAAG,IAAA,CACd,GAAIP,QAAQ,GAAK,IAAI,CAAE,CACfC,SAAkB,CAAG,CAAEb,IAAI,CAAEY,QAAQ,CAAEV,MAAM,CAAE,KAAM,CAAC,CAC5DlB,WAAW,CAAC,SAACmB,YAAY,WAAAC,MAAA,CAAAC,kBAAA,CAASF,YAAY,GAAEU,SAAS,IAAC,CAAC,CAC7D,CAAC,wBAAAG,QAAA,CAAAI,IAAA,MAAAT,OAAA,GACF,kBANK,CAAAL,aAAaA,CAAA,SAAAC,IAAA,CAAAc,KAAA,MAAAC,SAAA,OAMlB,CAEDhB,aAAa,EAAE,CACjB,CAAC,CAED,mBACE5B,KAAA,CAACL,GAAG,EACFkD,EAAE,CAAE,CACFC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,MAAM,IAAAxB,MAAA,CAAKf,cAAc,MAC3B,CAAE,CAAAwC,QAAA,eAEFrD,IAAA,CAACH,GAAG,EACFkD,EAAE,CAAE,CACFO,QAAQ,CAAE,CAAC,CACXC,SAAS,CAAE,MAAM,CACjBC,eAAe,CAAE,aAAa,CAC9BC,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAE,IAAI,CACdC,SAAS,CAAE,MAAM,CAEjB,sBAAsB,CAAE,CACtBF,KAAK,CAAE,KAAK,CACZD,eAAe,CAAE,aACnB,CAAC,CACD,4BAA4B,CAAE,CAC5BI,YAAY,CAAE,KAAK,CACnBJ,eAAe,CAAE,MACnB,CAAC,CACD,4BAA4B,CAAE,CAC5BI,YAAY,CAAE,KAAK,CACnBJ,eAAe,CAAE,aACnB,CACF,CAAE,CAAAH,QAAA,cAEFrD,IAAA,CAACJ,YAAY,EAACW,QAAQ,CAAEA,QAAS,EAAG,EAChC,cACNP,IAAA,CAACH,GAAG,EACFkD,EAAE,CAAE,CACFc,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,CAAC,CACTC,MAAM,CAAE,CAAC,CACTP,eAAe,CAAE,aAAa,CAC9BQ,aAAa,CAAE,MAAM,CACrBC,UAAU,CAAE,MAAM,CAClBR,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAE,IAAI,CACdQ,MAAM,CAAE,QACV,CAAE,CAAAb,QAAA,cAEFrD,IAAA,CAACL,WAAW,EAACY,QAAQ,CAAEA,QAAS,CAAC4D,QAAQ,CAAE5C,gBAAiB,EAAG,EAC3D,GACF,CAEV,CAAC,CAED,cAAe,CAAApB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}