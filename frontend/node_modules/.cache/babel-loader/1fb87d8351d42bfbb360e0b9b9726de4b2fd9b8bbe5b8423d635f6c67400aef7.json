{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Diaconou\\\\Code\\\\my-tutor-app-ts\\\\frontend\\\\src\\\\components\\\\MyDropDown.tsx\";\nimport React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { MenuItem, Select } from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customTheme = createTheme({\n  components: {\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: blue[500]\n          },\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: blue[500]\n          }\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        icon: {\n          color: blue[500] // Set the color of the dropdown arrow\n        },\n\n        select: {\n          color: 'lightgrey',\n          fontSize: '13px' // Set the color of the selected item in the Select component\n        }\n      }\n    }\n  }\n});\n\nconst MyDropDown = _ref => {\n  let {\n    languageChoice,\n    handleLanguageChoiceChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: customTheme,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      value: languageChoice // Use languageChoice prop to set the value of Select\n      ,\n      onChange: handleLanguageChoiceChange // Use handleLanguageChoiceChange prop to handle value changes\n      ,\n      sx: {\n        marginTop: '10px',\n        marginBottom: '10px',\n        width: '150px',\n        height: '40px',\n        '& fieldset': {\n          borderColor: blue[500]\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Greek\",\n        children: \"Greek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"French\",\n        children: \"French\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Spanish\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = MyDropDown;\nexport default MyDropDown;\nvar _c;\n$RefreshReg$(_c, \"MyDropDown\");","map":{"version":3,"names":["React","createTheme","ThemeProvider","MenuItem","Select","blue","jsxDEV","_jsxDEV","customTheme","components","MuiOutlinedInput","styleOverrides","root","borderColor","MuiSelect","icon","color","select","fontSize","MyDropDown","_ref","languageChoice","handleLanguageChoiceChange","theme","children","value","onChange","sx","marginTop","marginBottom","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Alex Diaconou/Code/my-tutor-app-ts/frontend/src/components/MyDropDown.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Box, Slider, Typography, Divider, MenuItem, Select, SelectChangeEvent } from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\n\r\nconst customTheme = createTheme({\r\n  components: {\r\n    MuiOutlinedInput: {\r\n      styleOverrides: {\r\n        root: {\r\n          '&:hover .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: blue[500],\r\n          },\r\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: blue[500],\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      styleOverrides: {\r\n        icon: {\r\n          color: blue[500], // Set the color of the dropdown arrow\r\n        },\r\n        select: {\r\n          color: 'lightgrey',\r\n          fontSize: '13px', // Set the color of the selected item in the Select component\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface MyDropDownProps {\r\n  languageChoice: string;\r\n  handleLanguageChoiceChange: (event: SelectChangeEvent<string>) => void;\r\n}\r\n\r\nconst MyDropDown: React.FC<MyDropDownProps> = ({ languageChoice, handleLanguageChoiceChange }) => {\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <Select\r\n        value={languageChoice} // Use languageChoice prop to set the value of Select\r\n        onChange={handleLanguageChoiceChange} // Use handleLanguageChoiceChange prop to handle value changes\r\n        sx={{\r\n          marginTop: '10px',\r\n          marginBottom: '10px',\r\n          width: '150px',\r\n          height: '40px',\r\n          '& fieldset': {\r\n            borderColor: blue[500],\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem value=\"Greek\">Greek</MenuItem>\r\n        <MenuItem value=\"French\">French</MenuItem>\r\n        <MenuItem value=\"Spanish\">Spanish</MenuItem>\r\n      </Select>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default MyDropDown;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAA2CC,QAAQ,EAAEC,MAAM,QAA2B,eAAe;AACrG,SAASC,IAAI,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGP,WAAW,CAAC;EAC9BQ,UAAU,EAAE;IACVC,gBAAgB,EAAE;MAChBC,cAAc,EAAE;QACdC,IAAI,EAAE;UACJ,0CAA0C,EAAE;YAC1CC,WAAW,EAAER,IAAI,CAAC,GAAG;UACvB,CAAC;UACD,gDAAgD,EAAE;YAChDQ,WAAW,EAAER,IAAI,CAAC,GAAG;UACvB;QACF;MACF;IACF,CAAC;IACDS,SAAS,EAAE;MACTH,cAAc,EAAE;QACdI,IAAI,EAAE;UACJC,KAAK,EAAEX,IAAI,CAAC,GAAG,CAAC,CAAE;QACpB,CAAC;;QACDY,MAAM,EAAE;UACND,KAAK,EAAE,WAAW;UAClBE,QAAQ,EAAE,MAAM,CAAE;QACpB;MACF;IACF;EACF;AACF,CAAC,CAAC;;AAOF,MAAMC,UAAqC,GAAGC,IAAA,IAAoD;EAAA,IAAnD;IAAEC,cAAc;IAAEC;EAA2B,CAAC,GAAAF,IAAA;EAC3F,oBACEb,OAAA,CAACL,aAAa;IAACqB,KAAK,EAAEf,WAAY;IAAAgB,QAAA,eAChCjB,OAAA,CAACH,MAAM;MACLqB,KAAK,EAAEJ,cAAe,CAAC;MAAA;MACvBK,QAAQ,EAAEJ,0BAA2B,CAAC;MAAA;MACtCK,EAAE,EAAE;QACFC,SAAS,EAAE,MAAM;QACjBC,YAAY,EAAE,MAAM;QACpBC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACd,YAAY,EAAE;UACZlB,WAAW,EAAER,IAAI,CAAC,GAAG;QACvB;MACF,CAAE;MAAAmB,QAAA,gBAEFjB,OAAA,CAACJ,QAAQ;QAACsB,KAAK,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAW,eACxC5B,OAAA,CAACJ,QAAQ;QAACsB,KAAK,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAW,eAC1C5B,OAAA,CAACJ,QAAQ;QAACsB,KAAK,EAAC,SAAS;QAAAD,QAAA,EAAC;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAW;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAEpB,CAAC;AAACC,EAAA,GAtBIjB,UAAqC;AAwB3C,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}