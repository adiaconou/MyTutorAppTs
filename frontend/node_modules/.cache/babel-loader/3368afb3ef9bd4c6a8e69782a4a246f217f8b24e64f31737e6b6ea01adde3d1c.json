{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Diaconou\\\\Code\\\\my-tutor-app-ts\\\\frontend\\\\src\\\\components\\\\MyTextField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { InputAdornment, Tooltip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { blue } from \"@mui/material/colors\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MuiInputLabel: {\n      styleOverrides: {\n        root: {\n          color: \"white\"\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        input: {\n          color: \"white\"\n        },\n        notchedOutline: {\n          \"&:hover\": {\n            borderColor: blue[500]\n          },\n          \"&.Mui-focused\": {\n            borderColor: blue[500]\n          },\n          borderColor: blue[500]\n        }\n      }\n    }\n  }\n});\nconst MyTextField = _ref => {\n  _s();\n  let {\n    onSubmit,\n    messages\n  } = _ref;\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    onSubmit(inputValue);\n    setInputValue(\"\");\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      handleSubmit();\n    }\n  };\n  const handleBlur = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingBottom: \"15px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"textField\",\n            variant: \"outlined\",\n            value: inputValue,\n            label: \"Send a message...\",\n            onChange: handleInputChange,\n            onKeyPress: handleKeyPress,\n            multiline: true,\n            maxRows: 1,\n            fullWidth: true,\n            autoFocus: true,\n            onBlur: handleBlur,\n            sx: {\n              \"& .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline\": {\n                borderColor: blue[500]\n              }\n            },\n            InputLabelProps: {\n              style: {\n                fontFamily: \"Noto Sans, monospace\",\n                // Set the font family\n                fontSize: \"16px\" // Set the font size\n              }\n            },\n\n            InputProps: {\n              style: {\n                fontFamily: \"Noto Sans, monospace\",\n                // Set the font family\n                fontSize: \"16px\",\n                // Set the font size\n                textAlign: \"left\"\n              },\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Send it!\",\n                  children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                    sx: {\n                      color: blue[500],\n                      cursor: \"pointer\",\n                      \"&:hover\": {\n                        cursor: \"pointer\"\n                      }\n                    },\n                    onClick: handleSubmit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTextField, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n_c = MyTextField;\nexport default MyTextField;\nvar _c;\n$RefreshReg$(_c, \"MyTextField\");","map":{"version":3,"names":["React","useState","TextField","InputAdornment","Tooltip","SendIcon","createTheme","ThemeProvider","blue","Box","Container","jsxDEV","_jsxDEV","theme","components","MuiInputLabel","styleOverrides","root","color","MuiOutlinedInput","input","notchedOutline","borderColor","MyTextField","_ref","_s","onSubmit","messages","inputValue","setInputValue","handleInputChange","event","target","value","handleSubmit","preventDefault","handleKeyPress","key","handleBlur","style","display","justifyContent","paddingBottom","children","maxWidth","id","variant","label","onChange","onKeyPress","multiline","maxRows","fullWidth","autoFocus","onBlur","sx","InputLabelProps","fontFamily","fontSize","InputProps","textAlign","endAdornment","position","title","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Alex Diaconou/Code/my-tutor-app-ts/frontend/src/components/MyTextField.tsx"],"sourcesContent":["import React, { useState, useEffect, MouseEvent, FocusEvent } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { InputAdornment, Tooltip } from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { blue } from \"@mui/material/colors\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport { Theme } from \"@mui/system\";\r\nimport { useTheme } from \"@mui/system\";\r\n\r\nconst theme = createTheme({\r\n  components: {\r\n    MuiInputLabel: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: \"white\",\r\n        },\r\n      },\r\n    },\r\n    MuiOutlinedInput: {\r\n      styleOverrides: {\r\n        input: {\r\n          color: \"white\",\r\n        },\r\n        notchedOutline: {\r\n          \"&:hover\": {\r\n            borderColor: blue[500],\r\n          },\r\n          \"&.Mui-focused\": {\r\n            borderColor: blue[500],\r\n          },\r\n          borderColor: blue[500],\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface Message {\r\n  text: string;\r\n  isUser: boolean;\r\n}\r\n\r\ninterface MyTextFieldProps {\r\n  onSubmit: (inputValue: string) => void;\r\n  messages: Message[];\r\n}\r\n\r\n\r\nconst MyTextField: React.FC<MyTextFieldProps> = ({ onSubmit, messages }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (\r\n    event?: MouseEvent<SVGSVGElement> | React.FormEvent<HTMLFormElement>\r\n  ) => {\r\n    event?.preventDefault();\r\n    onSubmit(inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleBlur = (\r\n    event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingBottom: \"15px\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <form onSubmit={handleSubmit}>\r\n          <ThemeProvider theme={theme}>\r\n            <TextField\r\n              id=\"textField\"\r\n              variant=\"outlined\"\r\n              value={inputValue}\r\n              label=\"Send a message...\"\r\n              onChange={handleInputChange}\r\n              onKeyPress={handleKeyPress}\r\n              multiline\r\n              maxRows={1}\r\n              fullWidth\r\n              autoFocus={true}\r\n              onBlur={handleBlur}\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline\":\r\n                  {\r\n                    borderColor: blue[500],\r\n                  },\r\n              }}\r\n              InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Noto Sans, monospace\", // Set the font family\r\n                  fontSize: \"16px\", // Set the font size\r\n                },\r\n              }}\r\n              InputProps={{\r\n                style: {\r\n                  fontFamily: \"Noto Sans, monospace\", // Set the font family\r\n                  fontSize: \"16px\", // Set the font size\r\n                  textAlign: \"left\",\r\n                },\r\n\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <Tooltip title=\"Send it!\">\r\n                      <SendIcon\r\n                        sx={{\r\n                          color: blue[500],\r\n                          cursor: \"pointer\",\r\n                          \"&:hover\": {\r\n                            cursor: \"pointer\",\r\n                          },\r\n                        }}\r\n                        onClick={handleSubmit}\r\n                      />\r\n                    </Tooltip>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </ThemeProvider>\r\n        </form>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyTextField;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}